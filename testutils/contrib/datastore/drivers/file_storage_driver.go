// Code generated by mockery v1.0.0. DO NOT EDIT.

package drivers

import (
	context "context"

	file "github.com/soda/multi-cloud/file/proto"

	mock "github.com/stretchr/testify/mock"
)

// FileStorageDriver is an autogenerated mock type for the FileStorageDriver type
type FileStorageDriver struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *FileStorageDriver) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CreateFileShare provides a mock function with given fields: ctx, fs
func (_m *FileStorageDriver) CreateFileShare(ctx context.Context, fs *file.CreateFileShareRequest) (*file.CreateFileShareResponse, error) {
	ret := _m.Called(ctx, fs)

	var r0 *file.CreateFileShareResponse
	if rf, ok := ret.Get(0).(func(context.Context, *file.CreateFileShareRequest) *file.CreateFileShareResponse); ok {
		r0 = rf(ctx, fs)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*file.CreateFileShareResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *file.CreateFileShareRequest) error); ok {
		r1 = rf(ctx, fs)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteFileShare provides a mock function with given fields: ctx, in
func (_m *FileStorageDriver) DeleteFileShare(ctx context.Context, in *file.DeleteFileShareRequest) (*file.DeleteFileShareResponse, error) {
	ret := _m.Called(ctx, in)

	var r0 *file.DeleteFileShareResponse
	if rf, ok := ret.Get(0).(func(context.Context, *file.DeleteFileShareRequest) *file.DeleteFileShareResponse); ok {
		r0 = rf(ctx, in)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*file.DeleteFileShareResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *file.DeleteFileShareRequest) error); ok {
		r1 = rf(ctx, in)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetFileShare provides a mock function with given fields: ctx, fs
func (_m *FileStorageDriver) GetFileShare(ctx context.Context, fs *file.GetFileShareRequest) (*file.GetFileShareResponse, error) {
	ret := _m.Called(ctx, fs)

	var r0 *file.GetFileShareResponse
	if rf, ok := ret.Get(0).(func(context.Context, *file.GetFileShareRequest) *file.GetFileShareResponse); ok {
		r0 = rf(ctx, fs)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*file.GetFileShareResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *file.GetFileShareRequest) error); ok {
		r1 = rf(ctx, fs)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListFileShare provides a mock function with given fields: ctx, fs
func (_m *FileStorageDriver) ListFileShare(ctx context.Context, fs *file.ListFileShareRequest) (*file.ListFileShareResponse, error) {
	ret := _m.Called(ctx, fs)

	var r0 *file.ListFileShareResponse
	if rf, ok := ret.Get(0).(func(context.Context, *file.ListFileShareRequest) *file.ListFileShareResponse); ok {
		r0 = rf(ctx, fs)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*file.ListFileShareResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *file.ListFileShareRequest) error); ok {
		r1 = rf(ctx, fs)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdatefileShare provides a mock function with given fields: ctx, fs
func (_m *FileStorageDriver) UpdatefileShare(ctx context.Context, fs *file.UpdateFileShareRequest) (*file.UpdateFileShareResponse, error) {
	ret := _m.Called(ctx, fs)

	var r0 *file.UpdateFileShareResponse
	if rf, ok := ret.Get(0).(func(context.Context, *file.UpdateFileShareRequest) *file.UpdateFileShareResponse); ok {
		r0 = rf(ctx, fs)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*file.UpdateFileShareResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *file.UpdateFileShareRequest) error); ok {
		r1 = rf(ctx, fs)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
